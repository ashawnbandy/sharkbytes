SharkbytesRails::Application.routes.draw do
  # Routing is a bit atypical in Shark Bytes.
  #
  # The root_path actually requires the user to be logged in, and is
  # the view for 'core_pages#home'.
  #
  # This controller action requires the user to be logged in, so in
  # fact the root_path is not accessible by not-signed-in users! Instead,
  # not-signed-in users are redirected (HTTP redirect) to new_user_session,
  # which is the devise 'sessions#new' page served from "/signin".
  #
  # The net effect is that the root_path works maximally-usefully for the
  # use case, but is completely atypical of web apps.

  root to: "core_pages#home"
  devise_for :users, skip: [:sessions]
  as :user do
    get 'signin' => 'devise/sessions#new', as: :new_user_session
    post 'signin' => 'devise/sessions#create', as: :user_session
    delete 'signout' => 'devise/sessions#destroy', as: :destroy_user_session,
      via: Devise.mappings[:user].sign_out_via
  end

  # RESTful resources
  resources :sharks


  # BELOW THIS LINE is stuff auto-generated by rails. (above is mine.)

  # The priority is based upon order of creation:
  # first created -> highest priority.

  # Sample of regular route:
  #   match 'products/:id' => 'catalog#view'
  # Keep in mind you can assign values other than :controller and :action

  # Sample of named route:
  #   match 'products/:id/purchase' => 'catalog#purchase', :as => :purchase
  # This route can be invoked with purchase_url(:id => product.id)

  # Sample resource route (maps HTTP verbs to controller actions automatically):
  #   resources :products

  # Sample resource route with options:
  #   resources :products do
  #     member do
  #       get 'short'
  #       post 'toggle'
  #     end
  #
  #     collection do
  #       get 'sold'
  #     end
  #   end

  # Sample resource route with sub-resources:
  #   resources :products do
  #     resources :comments, :sales
  #     resource :seller
  #   end

  # Sample resource route with more complex sub-resources
  #   resources :products do
  #     resources :comments
  #     resources :sales do
  #       get 'recent', :on => :collection
  #     end
  #   end

  # Sample resource route within a namespace:
  #   namespace :admin do
  #     # Directs /admin/products/* to Admin::ProductsController
  #     # (app/controllers/admin/products_controller.rb)
  #     resources :products
  #   end

  # You can have the root of your site routed with "root"
  # just remember to delete public/index.html.
  # root :to => 'welcome#index'

  # See how all your routes lay out with "rake routes"

  # This is a legacy wild controller route that's not recommended for RESTful applications.
  # Note: This route will make all actions in every controller accessible via GET requests.
  # match ':controller(/:action(/:id))(.:format)'
end
